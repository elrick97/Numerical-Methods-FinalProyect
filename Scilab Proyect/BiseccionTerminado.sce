// This GUI file is generated by guibuilder version 4.2.1
///////////////////////////////////////////////////////
//   Metodo Biseccion
//
//   Este archivo toma datos de una interfaz grafica y los
//   procesa para sacar la aproximacion de una curva a su raiz
//
//   Ricardo Ramirez  A01338143
//   Rafael Martinez  A01039710
//
//   06 / 05  / 19    version 1.0
//////////////////////////////////////////////////////

//////////////////////////////////////////////////////
//   Parametros:

//   
/////////////////////////////////////////////////////

f=figure('figure_position',[400,50],'figure_size',[640,480],'auto_resize','on','background',[33],'figure_name','Graphic window number %d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.tituloBiseccion=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[24],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.3923438,0.8165939,0.225,0.1069869],'Relief','default','SliderStep',[0.01,0.1],'String','  Bisección','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloBiseccion','Callback','')
handles.tituloLimInf=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476563,0.6523144,0.2021875,0.1058952],'Relief','default','SliderStep',[0.01,0.1],'String','Ingresa limite inferior','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloLimInf','Callback','')
handles.tituloLimSup=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476563,0.5323144,0.2121875,0.1058952],'Relief','default','SliderStep',[0.01,0.1],'String','Ingresa limite superior','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloLimSup','Callback','')
handles.tituloEA=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476563,0.4023144,0.2121875,0.1058952],'Relief','default','SliderStep',[0.01,0.1],'String','Ingresa error absoluto','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloEA','Callback','')
handles.tituloIT=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476563,0.2723144,0.3421875,0.1058952],'Relief','default','SliderStep',[0.01,0.1],'String','Ingresa valor de iteraciones maximas','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloIT','Callback','')
handles.tituloEq=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.0476563,0.15,0.3321875,0.1058952],'Relief','default','SliderStep',[0.01,0.1],'String','Ingresa la ecuacion','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','tituloEq','Callback','')
handles.xL=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.261875,0.6550655,0.1992188,0.0906114],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','xL','Callback','xL')
handles.xU=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.271875,0.5350655,0.1992188,0.0906114],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','xU','Callback','xU')
handles.eA=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.271875,0.4050655,0.1992188,0.0906114],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','eA','Callback','eA')
handles.iT=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.401875,0.2750655,0.1992188,0.0971616],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','iT','Callback','iT')
handles.eq=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.401875,0.1550655,0.1992188,0.0971616],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','iT','Callback','iT')
handles.cajaResp=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.706875,0.147773,0.198125,0.2129694],'Relief','default','SliderStep',[0.01,0.1],'String','Calcular','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','cajaResp','Callback','cajaResp_callback(handles)')
handles.resp=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.8032813,0.6663755,0.1488,0.08],'Relief','default','SliderStep',[0.01,0.1],'String',' ','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','resp','Callback','resp')
handles.uiXR=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6467188,0.670917,0.128125,0.0676856],'Relief','default','SliderStep',[0.01,0.1],'String','XR = ','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','uiXR','Callback','')
handles.textSolution=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7314063,0.7636245,0.1085937,0.0720524],'Relief','default','SliderStep',[0.01,0.1],'String','Solución','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','textSolution','Callback','')
handles.errorText=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.645,0.5748035,0.1540625,0.0665502],'Relief','default','SliderStep',[0.01,0.1],'String','Error Absoluto = ','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','errorText','Callback','')
handles.solutionError=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.8046875,0.5680349,0.145625,0.0721834],'Relief','default','SliderStep',[0.01,0.1],'String','','Style','edit','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','solutionError','Callback','')
handles.clearButton=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.77125,0.0931004,0.12,0.0487336],'Relief','default','SliderStep',[0.01,0.1],'String','Clear','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','clearButton','Callback','clearButton_callback(handles)')
handles.buttonB=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Lucida Grande','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.13875,0.8462882,0.128125,0.0915721],'Relief','default','SliderStep',[0.01,0.1],'String','Back','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','buttonB','Callback','buttonB_callback(handles)')

f.visible = "on";

//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////


function dY=F(x)
    dY=x*x
endfunction

function buttonB_callback(handles)
//Write your callback for  buttonB  here
    close()
endfunction


//      dXL     es el valor del limite inferior.
//      dXU     es el valor del limite superior.
//      dEA     es el error minimo aceptado.
//      iIt     es el numero maximo de iteraciones.

function cajaResp_callback(handles)
//Write your callback for  cajaResp  here

xL = strtod(handles.xL.string)
xU = strtod(handles.xU.string)
eA = strtod(handles.eA.string)
iT = strtod(handles.iT.string)
deff("dY = F(x)", "dY="+(handles.eq.string))

dFL = 1.0 //Funcion evaluada en xl
dFU = 1.0 // funcion evaluada en xu
dXR = 1.0 // el valor de xr
dEC = 0 //valor del error
dViejo = 0 // el valor pasado
for i = 1 : iT
    dFL = F(xL) //evaluar el valor.
    dFU = F(xU) //evaluar el valor.
    dXR = (xU+xL)/2 // creando el nuevo xr.
    dFXR = F(dXR) //evaluar valor de xr.
    
    if(i>1)then                             //Para no calcular el error de la primera iteracion.
       dEC =  abs((dXR - dViejo)/dXR)*100 
    end
    if( dFL * dFXR < 0) then // checando intervalos.
        xU = dXR
    else
        xL = dXR
    end
    dViejo = dXR //reemplazando el nuevo XR.
    if(dFXR == 0) then // Checando si llego a la raiz exacta.
        handles.resp.string = string(dXR);
        break;
    end
    if(dEC <= eA && i <> 1) then //checando si es menor al error minimo.
        handles.resp.string = string(dXR);
        handles.solutionError.string = string(dEC);
        break;
    end
    if(i == iT) then //Checando si llego al numero maximo de iteraciones.
        handles.resp.string = string(dXR);
        handles.solutionError.string = string(dEC)+"%";
        break
    end
end
endfunction


function clearButton_callback(handles)
//Write your callback for  clearButton  here
handles.xL.string = "";
handles.xU.string = "";
handles.eA.string = "";
handles.iT.string = "";
handles.eq.string = "";
handles.resp.string = "";
handles.solutionError.string = "";
endfunction

